_unit = player;

private ["_suspiciousValue","_weirdoLevel","_spotDistance","_vehDescription","_vehFullOpen","_vehicle","_vehFullOpen","_vehFullClosed"];

_vehicle = vehicle _unit;

if (isNil (_vehicle getVariable "INC_vehDescription")) then {

    _vehDescription = format ["%1%2%3",(getText (configfile >> "CfgVehicles" >> (typeOf _vehicle) >> "displayName")),(typeOf _vehicle),(getText (configfile >> "CfgVehicles" >> (typeOf _vehicle) >> "editorSubcategory"))];

    _vehicle setVariable ["INC_vehDescription",_vehDescription];
};

_vehDescription = _vehicle getVariable ["INC_vehDescription","UNASSIGNED"];

_vehFullOpen =  ((getText (configfile >> "CfgVehicles" >> (typeOf _vehicle) >> "attenuationEffectType")) == "OpenCarAttenuation");

_vehFullClosed = ((getText (configfile >> "CfgVehicles" >> (typeOf _vehicle) >> "attenuationEffectType")) == "TankAttenuation");

_suspiciousValue = 1;
_weirdoLevel = 1;
_spotDistance = 1;

if ((((_vehDescription find "overed") == -1) || {_unit == driver _vehicle} || {count assignedVehicleRole _unit == 2}) && {(!_vehFullClosed) || {isTurnedOut _unit}}) then {
    if (
        (

            ((_vehDescription find "ffroad") >= 1) ||
            {(_vehDescription find "pen") >= 1} ||
            {(_vehDescription find "ransport") >= 1} ||
            {_vehFullOpen} ||
            {isTurnedOut _unit}
        ) && {
            ((_vehDescription find "overed") == -1) &&
            {!_vehFullClosed} &&
            {
                (count assignedVehicleRole _unit == 2) ||
                {_vehFullOpen}
            }
        }
    ) then {
        systemChat "In an open position on an open vehicle";

        if !(((uniform _unit in INC_civilianUniforms) || {(uniform _unit in INC_incogUniforms)})) then {
            _weirdoLevel = _weirdoLevel + 12;
            _spotDistance = _spotDistance + 8;
            systemChat "Not wearing the right uniform";
        };

        if (!(((currentWeapon _unit == "") || {currentWeapon _unit == "Throw"} || {currentWeapon _unit == binocular _unit}) && {primaryweapon _unit == ""} && {secondaryWeapon _unit == ""}) && {count assignedVehicleRole _unit == 2 && {!_vehFullClosed} && {(_vehDescription find "MRAP") == -1}}) then {
            _weirdoLevel = _weirdoLevel + 6;

            if !(weaponLowered _unit) then {
                _spotDistance = _spotDistance + 5;
                systemChat "Weapon raised";

            } else {
                systemChat "Weapon lowered";
            };
        };
    } else {
        systemChat "In an enclosed position";
        if !(((uniform _unit in INC_civilianUniforms) || {(uniform _unit in INC_incogUniforms)})) then {
            _weirdoLevel = _weirdoLevel + 8;
            _spotDistance = _spotDistance + 1;
            systemChat "Wearing the wrong uniform";
        };

        if (!(((currentWeapon _unit == "") || {currentWeapon _unit == "Throw"} || {currentWeapon _unit == binocular _unit}) && {primaryweapon _unit == ""} && {secondaryWeapon _unit == ""}) && {count assignedVehicleRole _unit == 2 && {!_vehFullClosed} && {(_vehDescription find "MRAP") == -1}}) then {

            if !(weaponLowered _unit) then {
                _weirdoLevel = _weirdoLevel + 5;
                _spotDistance = _spotDistance + 3;
                systemChat "Armed and weapon raised";
            } else {
                _weirdoLevel = _weirdoLevel + 3;
                systemChat "Armed and weapon lowered";
            };
        };
    };
};


if ((((_vehDescription find "overed") == -1) || {_unit == driver _vehicle} || {count assignedVehicleRole _unit == 2}) && {(!_vehFullClosed) || {isTurnedOut _unit}}) then {
    if (
        (

            ((_vehDescription find "ffroad") >= 1) ||
            {(_vehDescription find "pen") >= 1} ||
            {(_vehDescription find "ransport") >= 1} ||
            {_vehFullOpen} ||
            {isTurnedOut _unit}
        ) && {
            ((_vehDescription find "overed") == -1) &&
            {!_vehFullClosed} &&
            {
                (count assignedVehicleRole _unit == 2) ||
                {_vehFullOpen}
            }
        }
    ) then {
        systemChat "In an open position on an open vehicle";

        if !(uniform _unit in INC_incogUniforms) then {
            _weirdoLevel = _weirdoLevel + 12;
            _spotDistance = _spotDistance + 8;
            systemChat "Not wearing the right uniform";
        };

        if (!(((currentWeapon _unit == "") || {currentWeapon _unit == "Throw"} || {currentWeapon _unit == binocular _unit}) && {primaryweapon _unit == ""} && {secondaryWeapon _unit == ""}) && {count assignedVehicleRole _unit == 2 && {!_vehFullClosed} && {(_vehDescription find "MRAP") == -1}}) then {

            if !(weaponLowered _unit) then {
                _weirdoLevel = _weirdoLevel + 6;
                _spotDistance = _spotDistance + 4;
                systemChat "Weapon raised";

            } else {
                _weirdoLevel = _weirdoLevel + 3;
                systemChat "Weapon lowered";
            };
        };
    } else {
        systemChat "In an enclosed position";
        if (!(uniform _unit in INC_incogUniforms) && {(_vehDescription find "MRAP") == -1 || {driver _vehicle == _unit}}) then {
            _weirdoLevel = _weirdoLevel + 7;
            _spotDistance = _spotDistance + 1;
            systemChat "Wearing the wrong uniform";

            if (!(((currentWeapon _unit == "") || {currentWeapon _unit == "Throw"} || {currentWeapon _unit == binocular _unit}) && {primaryweapon _unit == ""} && {secondaryWeapon _unit == ""}) && {count assignedVehicleRole _unit == 2 && {!_vehFullClosed} && {(_vehDescription find "MRAP") == -1}}) then {

                if !(weaponLowered _unit) then {
                    _weirdoLevel = _weirdoLevel + 5;
                    _spotDistance = _spotDistance + 3;
                    systemChat "Armed and weapon raised";
                } else {
                    _weirdoLevel = _weirdoLevel + 3;
                    systemChat "Armed and weapon lowered";
                };
            };
        };
    };
};


Incog quadbikes not working (too low - should be recognised as outside)

Civilian vehicles are all kinds of fucked

Turnout check isn't working

It's all gone horribly wrong!!!

Need to make an extra function for all this shit cos it's fucking crazy.

{_x allowDamage false} forEach (units player);

hint str (count ((units player) select {[_x,INC_regEnySide,true] call INCON_ucr_fnc_isKnownToSide}));

hint str ((units player) select {_x getVariable ["INC_isCompromised",false]});

onEachFrame {hintsilent str (count ((units player) select {_x getVariable ["INC_proxAlert",false]})); }
onEachFrame {hintsilent str (count ((units player) select {[_x,INC_regEnySide,true] call INCON_ucr_fnc_isKnownToSide})); }


[ben] spawn {
    params ["_unit"];
    sleep 5;

    waitUntil {
        sleep 1;
        _unit globalChat (format ["%1 cover intact: %2, comp f/v: %3 / %4",_unit,(captive _unit),(_unit getVariable ["INC_isCompromised",false]),((vehicle _unit) getVariable ["INC_naughtyVehicle",false])]);
        _unit globalChat (format ["%1 trespassing: %2",_unit,((_unit getVariable ["INC_proxAlert",false]) || {(_unit getVariable ["INC_trespassAlert",false])})]);
        _unit globalChat (format ["%1 suspicious level: %2",_unit,(_unit getVariable ["INC_suspiciousValue",1])]);
        _unit globalChat (format ["%1 weirdo check on: %2, value %3",_unit,(captive _unit),(round (_unit getVariable ["INC_disguiseValue",1]))]);
        _unit globalChat (format ["%1 dist multi on: %2, value i%3 / f%4",_unit,(captive _unit),(round (_unit getVariable ["INC_radiusMulti",1])),(round (_unit getVariable ["INC_disguiseRad",1]))]);
        _unit globalChat (format ["Enemy know about %1: t%2 / i%3 / a%4",_unit,(_unit getVariable ["INC_AnyKnowsSO",false]),([_unit,INC_regEnySide,true] call INCON_ucr_fnc_isKnownToSide),([_unit,INC_asymEnySide,true] call INCON_ucr_fnc_isKnownToSide)]);
        !(_unit getVariable ["isUndercover",false])
    };

    _unit globalChat (format ["%1 undercover status: %2",_unit,(_unit getVariable ["isUndercover",false])]);
};

_ld = getUnitLoadout player; {_x setUnitLoadout _ld; true} count (units player);
